version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@2.0.6

commands:
  setup-pip-cache:
    steps:
      - restore_cache:
          name: Restoring pip cache
          key: &pipcachekey pipcache-v1-pyv3-8-9-{{ checksum "Pipfile.lock" }}
      - run:
          command: pipenv sync
      - save_cache:
          key: *pipcachekey
          paths:
            - ".venv"

  setup-yarn-cache:
    steps:
      - restore_cache:
          name: Restoring Yarn Package Cache
          key: &yarncache yarn-packages-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          no_output_timeout: &timeout 30m
          command: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Caching Yarn Packages
          key: *yarncache
          paths:
            - ~/.cache/yarn
            - node_modules

  make-bucket:
    parameters:
      bucket-name:
        type: string
    steps:
      - run:
          name: Make Bucket << parameters.bucket-name >>
          command: |
            if [ $(aws s3 ls | grep "<< parameters.bucket-name >>" | wc -l) -eq 0 ]
            then
                aws s3 mb "s3://<< parameters.bucket-name >>"
                if [ $? -eq 0 ]
                then
                    echo "Deployment Bucket Created Successfully"
                else
                    echo "Deployment Bucket Exists in Other AWS Account"
                    exit 1
                fi
            else
              echo "Deployment Bucket Already Exists in AWS Account"
            fi

jobs:
  main:
    docker: 
      - image: cimg/node:lts
    resource_class: small
    parameters:
      environment:
        type: string      
    steps:
      - checkout
      - aws-cli/install
      - make-bucket:
          bucket-name: circleci.roar200-<< parameters.environment >>-deployment-bucket      
      - setup-yarn-cache
      - run:
          name: Check version
          command: yarn run sls --version

workflows:
  main:
    jobs:
      - main:
          name: Deploy Dev
          context: AWS_DEV_CREDENTIALS
          environment: dev
